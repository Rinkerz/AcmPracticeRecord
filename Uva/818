//学习一下别人的代码。用位运算快速比较以及暴力枚举被解开的环。。
#include <stdio.h>
#include <string.h>
#define min(a,b) (a)<(b)?(a):(b)
#define INF 0x3f3f3f3f
const int N = 20;

int n, g[N][N], vis[N], cn;

void init() {
    int a, b;
    memset(g, 0, sizeof(g));
    while (~scanf("%d%d", &a, &b) && a != -1 && b != -1) {
        g[a - 1][b - 1] = g[b - 1][a - 1] = 1;
    }
}

bool two(int s) {
    for (int i = 0; i < n; i++) {
        if (s&(1<<i)) continue;
        int num = 0;
        for (int j = 0; j < n; j++) {
            if (s&(1<<j)) continue;
            if (g[i][j]) num++;
        }
        if (num > 2) return true;
    }
    return false;
}

bool dfs(int s, int now, int fa) {
    vis[now] = 1;
    for (int i = 0; i < n; i++) {
        if (!g[now][i] || (s&(1<<i)) || i == fa) continue;
        if (vis[i]) return true;
        if (dfs(s, i, now)) return true;
    }
    return false;
}

bool circle(int s) {
    for (int i = 0; i < n; i++) {
        if (vis[i] || (s&(1<<i))) continue;
        cn++;
        if (dfs(s, i, -1)) return true;
    }
    return false;
}

int cal(int s) {
    return s == 0 ? 0 : cal(s / 2) + (s&1);
}

int solve() {
    int ans = INF;
    int s = (1<<n);
    for (int i = 0; i < s; i++) {
        cn = 0; memset(vis, 0, sizeof(vis));
        if(two(i) || circle(i)) continue;
        if (cal(i) >= cn - 1)
            ans = min(cal(i), ans);
    }
    return ans;
}

int main() {
    int cas = 0;
    while (~scanf("%d", &n) && n) {
        init();
        printf("Set %d: Minimum links to open is %d\n", ++cas, solve());
    }
    return 0;
}

